{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MariCSilva/PA_python/blob/main/C%C3%B3pia_de_Listadela%C3%A7os.ipynb/li%C3%A7%C3%B5es\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Nova Lista de Exercícios"
      ],
      "metadata": {
        "id": "GbFjwiBieMVZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Exercícios com for, while, listas, strings e dicionários**"
      ],
      "metadata": {
        "id": "5KtSL9tuj-zo"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1) Soma dos números de uma lista\n",
        "\n",
        "Dada a lista numeros = [3, 7, 2, 8, 10], use um for para calcular a soma de todos os elementos."
      ],
      "metadata": {
        "id": "ZZZicFxfkEEg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numeros = [3, 7, 2, 8, 10]\n",
        "\n",
        "for i in numeros:\n",
        "  soma = sum(numeros)\n",
        "\n",
        "soma"
      ],
      "metadata": {
        "id": "tMIp9PO277-m",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1f235e6c-09c4-4c25-f8cf-b63b57f1c399"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "30"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2) Contagem de vogais em uma string\n",
        "\n",
        "Peça uma palavra ao usuário e use um for para contar quantas vogais (a, e, i, o, u) existem."
      ],
      "metadata": {
        "id": "Xw8gph7LkL6R"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "palavra = input(\"Digite aqui uma palavra: \")\n",
        "vogais = \"a e i o u\"\n",
        "cont = 0\n",
        "\n",
        "for i in palavra:\n",
        "  if i.lower() in vogais:\n",
        "    cont = cont + 1\n",
        "\n",
        "print(\"nessa palavra há: \", cont, \"vogais\")"
      ],
      "metadata": {
        "id": "TnQUk8MG8cma",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9e7703ee-922b-4499-a5a4-a444323dd29a"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite aqui uma palavra: paralelepipedo\n",
            "nessa palavra há:  7 vogais\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "irD2xL3xkSDN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "3) Inverter lista usando while\n",
        "\n",
        "Dada a lista nomes = [\"Ana\", \"João\", \"Carlos\", \"Maria\"], use um while para inverter a ordem dos elementos (sem usar reverse() ou slicing)."
      ],
      "metadata": {
        "id": "YfW4Aw8ckZw-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "nomes = [\"Ana\", \"João\", \"Carlos\", \"Maria\"]\n",
        "\n",
        "i = 0\n",
        "j = len(nomes) - 1\n",
        "\n",
        "while i < j:\n",
        "    nomes[i], nomes[j] = nomes[j], nomes[i]\n",
        "\n",
        "    i += 1\n",
        "    j -= 1\n",
        "\n",
        "print(nomes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vtFfFSlZs2Iu",
        "outputId": "5b9c8b96-170c-406e-fe9a-ca73d01b8e94"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Maria', 'Carlos', 'João', 'Ana']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "4) Maior número em uma lista\n",
        "\n",
        "Escreva um programa que percorra uma lista de inteiros e encontre o maior valor."
      ],
      "metadata": {
        "id": "cvRuv0PxkkYi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "inteiros = [10, 20, 100, 40, 30]\n",
        "\n",
        "maior_valor = inteiros[0]\n",
        "\n",
        "for numero in inteiros:\n",
        "    if numero > maior_valor:\n",
        "        maior_valor = numero\n",
        "\n",
        "print(maior_valor)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ox0hZKeN0sqC",
        "outputId": "7f888a6b-6108-46da-e4bf-f9b4a1a84f1f"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "5) Remover elementos repetidos de uma lista\n",
        "\n",
        "Usando um for, percorra a lista valores = [1, 2, 2, 3, 4, 4, 5] e crie uma nova lista apenas com elementos únicos."
      ],
      "metadata": {
        "id": "xV6pmOVCkuCm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista = [1, 2, 2, 3, 4, 4, 5]\n",
        "\n",
        "\n",
        "novalista = []\n",
        "\n",
        "\n",
        "for valor in lista:\n",
        "    if valor not in novalista:\n",
        "        novalista.append(valor)\n",
        "\n",
        "\n",
        "print(\"a nova lista sem repetir valores é:\", novalista)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0nMScvTa2Ruo",
        "outputId": "957e2e65-44a0-487d-ea6f-fdf06cee570c"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "a nova lista sem repetir valores é: [1, 2, 3, 4, 5]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6) Verificar se palavra é palíndromo\n",
        "\n",
        "Peça uma palavra ao usuário e use while ou for para verificar se ela é igual de frente para trás (ex.: \"arara\")."
      ],
      "metadata": {
        "id": "_bHj-pkzk2TX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "while True:\n",
        "  palavra = input(\"Digite uma palavra ou 0 para parar: \")\n",
        "  if palavra == \"0\":\n",
        "    break\n",
        "\n",
        "  elif palavra == palavra[::-1]:\n",
        "    print(\"Essa palavra é um palindromo\")\n",
        "\n",
        "  else:\n",
        "    print(\"Essa palavra nao é um palindromo\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qO8cDLz23Cs_",
        "outputId": "d81bb10a-38ca-413e-ab6a-6111ea9ed250"
      },
      "execution_count": 15,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Digite uma palavra ou 0 para parar: arara\n",
            "Essa palavra é um palindromo\n",
            "Digite uma palavra ou 0 para parar: amor\n",
            "Essa palavra nao é um palindromo\n",
            "Digite uma palavra ou 0 para parar: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "7 Contagem regressiva com while\n",
        "\n",
        "Peça ao usuário um número e faça uma contagem regressiva até 0."
      ],
      "metadata": {
        "id": "1PeOPJ3ClC0c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numero = int(input(\"digite um numero para uma contagem regressiva: \"))\n",
        "print(\"começando de: \",numero)\n",
        "for i in range(numero):\n",
        "  print(numero - 1)\n",
        "  numero = numero -1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "miE5uzpS3b1G",
        "outputId": "b3d8d53a-90ab-47ea-b789-a05cdcccb100"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "digite um numero para uma contagem regressiva: 11\n",
            "começando de:  11\n",
            "10\n",
            "9\n",
            "8\n",
            "7\n",
            "6\n",
            "5\n",
            "4\n",
            "3\n",
            "2\n",
            "1\n",
            "0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "8) Percorrendo um dicionário de notas\n",
        "\n",
        "Dado o dicionário notas = {\"Ana\": 8, \"Carlos\": 7, \"Maria\": 10}, use um for para exibir cada aluno com sua nota."
      ],
      "metadata": {
        "id": "wKkDTzwelK_f"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "notas = {\"Ana\": 8, \"Carlos\": 7, \"Maria\": 10}\n",
        "for nome, nota in notas.items():\n",
        "  print(\"nome:\", nome, \"/ nota:\", nota)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NWfJUHas37Gt",
        "outputId": "1151c3f0-c362-4821-a9fd-3d7a73d56257"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nome: Ana / nota: 8\n",
            "nome: Carlos / nota: 7\n",
            "nome: Maria / nota: 10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "9)Filtrar números pares de uma lista\n",
        "\n",
        "Dada a lista numeros = [10, 21, 32, 43, 54], use um for para criar uma nova lista contendo apenas os pares."
      ],
      "metadata": {
        "id": "xrXKbCl7lUQg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numeros = [10, 21, 32, 43, 54]\n",
        "pares = []\n",
        "\n",
        "for i in numeros:\n",
        "  if i%2 == 0:\n",
        "    pares.append(i)\n",
        "\n",
        "print(pares)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Nuwbd23t4Gnt",
        "outputId": "33df615b-d7f7-4fe8-a8b7-4766a5343fe2"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[10, 32, 54]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "10) Contador de palavras em uma frase\n",
        "\n",
        "Peça ao usuário uma frase, divida em palavras (split()) e use um dicionário para contar quantas vezes cada palavra aparece."
      ],
      "metadata": {
        "id": "9pzoi0GxlcO8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "frase=input(\"digite uma frase: \").lower()\n",
        "listafrase = frase.split()\n",
        "listafrase\n",
        "contplvr = {}\n",
        "for plvr in listafrase:\n",
        "  contplvr[plvr] = contplvr.get(plvr,0) + 1\n",
        "print('Quantidade de letras : ',contplvr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cr2ncgMt4IrG",
        "outputId": "ced47d8c-b6c1-49da-9cb5-95cd899c8591"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "digite uma frase: frase legal pra chuchu muito legal\n",
            "Quantidade de letras :  {'frase': 1, 'legal': 2, 'pra': 1, 'chuchu': 1, 'muito': 1}\n"
          ]
        }
      ]
    }
  ]
}